#ifndef GRID_H
#define GRID_H

#include <vector>
#include <string>
#include <algorithm>
#include <random>
#include "raylib.h"
using namespace std;

class Game;

const int GRID_SIZE = 9; // Define the grid size
const int CELL_SIZE = 100; // Define each cell's size in pixels

class Grid {
private:
    Game* game; // Create a game object
    vector<vector<int>> grid, userGrid;     // Create a vector of vectors which stores integers. Grid stores the pre-filled grid generated by the game and userGrid stores the user inputs
    string errorMessage;
    double errorStartTime = 0.0;
    

public:
    Grid(); // Default constructor for the Grid class
    void SetValue(int row, int col, int value); // Set the value of the cell [row][col] to the value
    int GetValue(int row, int col) const; // Get the current value of the cell [row][col]
    void ClearGrid(); // Clears the userGrid
    void SetGrid(const vector<vector<int>>& newGrid); // Set the Grid
    bool IsValidPlacement(int row, int col, int num) const;
    void Draw();
    bool SaveGrid(const string& filename) const;
    bool LoadGrid(const string& filename);
    void GenerateSudoku(int difficulty);
    bool SolveSudoku();
    void ShuffleNumbers(vector<int>& numbers);
    void GenerateFullGrid();
    void RemoveNumbers(int difficulty);
    bool isSolved() const;
};

#endif